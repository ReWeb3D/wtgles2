{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"wtgles2 provides an OpenGLES2 library and serializes the commands to WebgGL using WebToolkit (Wt)","name":"Wtgles2","google":"UA-36686516-1","body":"## What is wtgles2 and ReWeb3D?\r\n\r\nReWeb3D is a C++ framework to bring 3D rendering of OpenGLES2 \r\napplications to web applications, using WebGL. It consists of an\r\nadapted version of [Wt](http://www.webtoolkit.eu/wt) and the \r\nwtgles2 wrapper library.\r\nIt has been tested successfully with [OpenSceneGraph](http://www.openscenegraph.org)\r\nand [osgEarth](http://osgearth.org) applications.\r\n\r\n\r\n## How does it work\r\nOpenGLES2 is a subset of OpenGL developed especially for mobile and embedded\r\ndevices. It does not provide \"fixed functions\" of OpenGL 2 and below, but\r\nis very close to WebGL, an OpenGL API for web browsers (Javascript).\r\n\r\nReWeb3D provides an OpenGLES2 implementation that you can link your application\r\nto. If you start the application, OpenGLES2 calls are captured and serialized\r\nas WebGL calls in an HTML page which is served over HTTP. The browser\r\nloads this page and renders the content of your application.\r\n\r\n## Examples and Demos\r\nAs examples, you can find basic OpenSceneGraph examples ported to ReWeb3D\r\nin the repository. Running versions may be found at http://demos.vicomtech.org/\r\n\r\n* [osgGeometry](http://demos.vicomtech.org/wt/examples/osggeometry.wt) demonstrates different simple geometry\r\ntypes and animation on the server\r\n* [osgShape](http://demos.vicomtech.org/wt/examples/osgshape.wt) shows different OSG shapes\r\n* [osgLight](http://demos.vicomtech.org/wt/examples/osglight.wt) includes two light sources and a server side animation\r\n* [osgViewer] (http://demos.vicomtech.org/wt/examples/osgViewerWt.wt) is the generic viewer for OSG\r\n* [osgEarthViewer](http://demos.vicomtech.org/wt/examples/osgEarthViewer.wt) is the generic viewer for osgEarth\r\n\r\n## Building\r\nTo build ReWeb3D you need [CMake](http://www.cmake.org/CMake) to create \r\nthe project files for your platform. You need the following components:\r\n\r\n* wtgles2 at https://github.com/ReWeb3D/wtgles2.git\r\n* adapted version of Wt at https://github.com/ReWeb3D/wt.git\r\n\r\nOptional but recommended to see the examples\r\n\r\n* OpenSceneGraph at http://www.openscenegraph.org/svn/osg/OpenSceneGraph/trunk\r\n* osgEarth at https://github.com/ReWeb3D/osgearth.git\r\n\r\nBuild sequence \r\n\r\n* build Wt (with WRaster support), see the [Wt documentation](http://www.webtoolkit.eu/wt/doc/reference/html)\r\n* build wtgles2 will provide an OpenGLES2 library and headers\r\n* build OpenSceneGraph using the provided OpenGLES2 library and headers see [osg documentation](http://www.openscenegraph.org/projects/osg/wiki/Community/OpenGL-ES)\r\n* build osgEarth using the compiled OpenGLES2 and OSG versions\r\n* build wtgles2 examples\r\n\r\n## License\r\nYou may use the library under the [GNU General Public License] (http://www.gnu.org/copyleft/gpl.html),\r\njust like Wt.\r\nProviding a more permissive license is not possible because of the OpenGLES2 license and Wt's license.\r\n\r\n\r\n## Acknowlegements\r\nThis work has been supported by [Vicomtech](http://www.vicomtech.org).\r\n"}